#!/usr/bin/perl
#
# FILE:         flash
# AUTHOR:       Martin Turon
# DATE CREATED: February 15, 2004
# DESCRIPTION:  Wrapper script around uisp to simplify flashing of mote
#               firmware 
#
# $Id: flash,v 1.2.2.2 2007/01/31 00:36:33 barry Exp $
#

my $g_version = '$Id: flash,v 1.2.2.2 2007/01/31 00:36:33 barry Exp $';

$| = 1;
print "flash Ver:$g_version\n";

if( @ARGV == 0 ) {
  print <<"EOF";
  Usage: flash [image] [nodeid] [port]
EOF
  exit 0;
}

$image = shift();
$nodeid = shift();
$comport = shift(); 
if ($comport eq "") {
   $comport = "/dev/ttyS0"; 
}
if ($nodeid eq "") {
   $nodeid = 1; 
}

$srecimage = $image;
$srecimage =~ s/exe/srec/;

$comport =~ m|(.*?)([0-9]+)$|;
if ($2 ne "") {
	$id = $2;
	$port = $1.$2;
} else {
	print "illegal device address.  Perhaps input file is in DOS format.  skipping.\n";
}
&flash_params($image, $nodeid, $comport); 

print "FLASH $image as node $nodeid to $comport\n";
print "\n$objcopy\n";
system "$objcopy";

print "\n$setid\n";
system "$setid";
print "\n$uisp\n";
$out = `$uisp`;
print $out;
if ($out =~ m/Fuse Extended Byte set to 0xff/go) {
    print "SUCCESS\n";
} else {
    print "ERROR\n";
}



#
# Flash a mote over a TCP/IP socket connection.
# @param image  Name of firmware to flash
# @param nodeid Id number of node
# @param addr   IP address or hostname to use
#
sub flaship {
    my ($image, $nodeid, $addr) = @_;

    $srecimage = $image;
    $srecimage =~ s/exe/srec/;
    
    $objcopy = "avr-objcopy --output-target=srec $image $srecimage";
    $setid   = "set-mote-id $srecimage $srecimage-$nodeid $nodeid";
    $skt = "-dprog=stk500 -dhost=$port";
    $dpart   =  &detect_mcu($skt);
    $uisp    = "uisp -dprog=stk500 -dhost=$addr -dpart=$dpart --wr_fuse_h=0xd9 --wr_fuse_e=ff  --erase --upload if=$srecimage-$nodeid";  
}

#
# Flash a mote over a serial UART connection.
# @param image  Name of firmware to flash
# @param nodeid Id number of node
# @param addr   Com port to use
#
sub flashcom {
    my ($image, $nodeid, $addr) = @_;

    $srecimage = $image;
    $srecimage =~ s/exe/srec/;
    
    $objcopy = "avr-objcopy --output-target=srec $image $srecimage";
    $setid   = "set-mote-id $srecimage $srecimage-$nodeid $nodeid";
    $mib = "-dprog=mib510 -dserial=$port";
    $dpart   =  &detect_mcu($mib);
    $uisp    = "uisp -dprog=mib510 -dserial=$addr -dpart=$dpart --wr_fuse_h=0xd9 --wr_fuse_e=ff  --erase --upload if=$srecimage-$nodeid";
}

sub flash_params {
    my ($image, $nodeid, $port) = @_;

    if ($port =~ m|([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+)|) {
	&flaship($image, $nodeid, $port); 
    } else {
	&flashcom($image, $nodeid, $port); 
    }
}
sub detect_mcu {
	my ($mibTemp) = @_;
	$uisp_read = "uisp -dpart=ATmega128 --rd_fuses $mibTemp";
	unless($readpid = (open READDPART, "$uisp_read 2>&1 |"))
	{
			die " ERROR: could not find uisp\n";
	} 
	$errMsg ="";
	while($out = <READDPART>){
		$errMsg =$errMsg.$out;
		if($out=~ /ATmega1281/){
			$mcuType="ATmega1281";
		}else{
			if($out=~ /ATmega128/){
				$mcuType="ATmega128";	
			}
		}
	}
	if(($mcuType eq "ATmega1281")||($mcuType eq "ATmega128")){
		return $mcuType;
	}else{
		print $errMsg;
		exit 0;
	}
		
}

