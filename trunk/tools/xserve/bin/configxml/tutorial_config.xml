<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE XServeConfig SYSTEM "./xserve_config.dtd">
<XServeConfig>
	
	<XFieldExtractor name="XTUTORIAL SingleHop Config XML" order="1">
		<XFields>
			<XField name="amtype" byteoffset="2" length="1" type="uint8"/>
			<XField name="nodeid" byteoffset="7" length="2" type="uint16" specialtype="nodeid"/>
			<!--
			<XField name="parent" byteoffset="14" length="2" type="uint16" specialtype="parentid"/>
			/-->
			<XField name="group" byteoffset="3" length="1" type="uint8"/>
			<XField name="board_id" byteoffset="5" length="1" type="uint8"/>
			<XField name="packet_id" byteoffset="6" length="1" type="uint8"/>
			<XField name="voltage" byteoffset="9" length="2" type="uint16"/>
			<XField name="temp" byteoffset="11" length="2" type="uint16"/>
			<XField name="light" byteoffset="13" length="2" type="uint16"/>
			<XField name="mic" byteoffset="15" length="2" type="uint16"/>
			<XField name="accel_x" byteoffset="17" length="2" type="uint16"/>
			<XField name="accel_y" byteoffset="19" length="2" type="uint16"/>
			<XField name="mag_x" byteoffset="21" length="2" type="uint16"/>
			<XField name="mag_y" byteoffset="23" length="2" type="uint16"/>
		</XFields>
		<XFilter>
			<XCondAnd>
			
				<!--
					Check if this is a sensor type packet...AMTYPE_XUART or AMTYPE_XSENSOR
					The Byte offsets defined above assume that there is no multihop header
				/-->
				<XCondOr>
					<XCond name="IsEqual">
						<XFilterParam name="fieldname" value="amtype"/>
						<XFilterParam name="fieldvalue" value="0x00"/>
					</XCond>

					<XCond name="IsEqual">
						<XFilterParam name="fieldname" value="amtype"/>
						<XFilterParam name="fieldvalue" value="0x32"/>
					</XCond>
				</XCondOr>

				<XCondOr>
					<XCond name="IsEqual">
						<XFilterParam name="fieldname" value="packet_id"/>
						<XFilterParam name="fieldvalue" value="2"/>
					</XCond>
					<XCond name="IsEqual">
						<XFilterParam name="fieldname" value="packet_id"/>
						<XFilterParam name="fieldvalue" value="3"/>
					</XCond>
				</XCondOr>
			
				<XCond name="IsEqual">
					<XFilterParam name="fieldname" value="board_id"/>
					<XFilterParam name="fieldvalue" value="0x88"/>
				</XCond>				
			</XCondAnd>
		</XFilter>
		<XDataSinks>
			<XDataSink name="Generic Print Datasink">
				<XDSParam name="printstring" value="XTutorial [sensor data converted to engineering units]:\n   lesson      := %s\n   health:     node id=%s \n   battery     := %s mv \n   temperature := %s degC\n   light       := %s ADC counts\n   mic         := %s ADC counts\n   AccelX      := %s milliG\n   AccelY      := %s milliG\n   MagX        := %s mgauss\n   MagY        := %s mgauss "/>
				<XDSParam name="printfields" value="packet_id,nodeid,voltage,temp,light,mic,accel_x,accel_y,mag_x,mag_y"/>
			</XDataSink>
			<XDataSink name="Generic Alert Datasink">
				<XDSParam name="voltage" value="[2500,3500]"/>
				<XDSParam name="temp" value="[-5,45]"/>
				<XDSParam name="light" value="[0,3000]"/>
				<XDSParam name="mic" value="[0,1000]"/>
				<XDSParam name="accel_x" value="[-2000,2000]"/>
				<XDSParam name="accel_y" value="[-2000,2000]"/>
				<XDSParam name="mag_x" value="[0,100]"/>
				<XDSParam name="mag_y" value="[0,100]"/>
			</XDataSink>
			<XDataSink name="Open Log Datasink">
				<XDSParam name="tablename_1" value="tutorial_results"/>				
				<XDSParam name="createsql_1" value="CREATE TABLE tutorial_results ( result_time timestamp without time zone, epoch integer, nodeid integer, parent integer, voltage integer, temp integer, light integer, accel_x integer, accel_y integer, mag_x integer, mag_y integer, mic integer )"/>	
				<XDSParam name="tablename_2" value="tutorial_results_l"/>				
				<XDSParam name="createsql_2" value="CREATE TABLE tutorial_results_l ( result_time timestamp without time zone, epoch integer, nodeid integer, parent integer, voltage integer, temp integer, light integer, accel_x integer, accel_y integer, mag_x integer, mag_y integer, mic integer )"/>	
				<XDSParam name="rulesql_2" value="CREATE RULE cache_tutorial_results AS ON INSERT TO tutorial_results DO ( DELETE FROM tutorial_results_l WHERE nodeid = NEW.nodeid;INSERT INTO tutorial_results_l VALUES (NEW.*); )"/>				
				<XDSParam name="insertsql_2" value="INSERT into tutorial_results (result_time,nodeid,voltage,temp,light,accel_x,accel_y,mag_x,mag_y,mic) values (now(),%i,%i,%i,%i,%i,%i,%i,%i,%i)"/>
				<XDSParam name="insertfields_2" value="nodeid,voltage,temp,light,accel_x,accel_y,mag_x,mag_y,mic"/>
			</XDataSink>
		</XDataSinks>
	</XFieldExtractor>

	<XFieldExtractor name="XTUTORIAL Multihop Config XML" order="2">
		<XFields>
			<XField name="amtype" byteoffset="2" length="1" type="uint8"/>
			<XField name="nodeid" byteoffset="7" length="2" type="uint16" specialtype="nodeid"/>
			<XField name="parent" byteoffset="14" length="2" type="uint16" specialtype="parentid"/>
			<XField name="group" byteoffset="3" length="1" type="uint8"/>
			<XField name="socketid" byteoffset="11" length="1" type="uint8"/>
			<XField name="board_id" byteoffset="12" length="1" type="uint8" specialtype="boardid"/>
			<XField name="packet_id" byteoffset="13" length="1" type="uint8"/>						
			<XField name="voltage" byteoffset="16" length="2" type="uint16"/>
			<XField name="temp" byteoffset="18" length="2" type="uint16"/>
			<XField name="light" byteoffset="20" length="2" type="uint16"/>
			<XField name="mic" byteoffset="22" length="2" type="uint16"/>
			<XField name="accel_x" byteoffset="24" length="2" type="uint16"/>
			<XField name="accel_y" byteoffset="26" length="2" type="uint16"/>
			<XField name="mag_x" byteoffset="28" length="2" type="uint16"/>
			<XField name="mag_y" byteoffset="30" length="2" type="uint16"/>
		</XFields>
		<XFilter>
			<XCondAnd>
			
				<!--
					Check if this is a sensor type packet...AMTYPE_XUART or AMTYPE_XSENSOR
					The Byte offsets defined above assume that there is no multihop header
				/-->
				<XCondOr>
					<XCond name="IsEqual">
						<XFilterParam name="fieldname" value="amtype"/>
						<XFilterParam name="fieldvalue" value="0x0B"/>
					</XCond>

					<XCond name="IsEqual">
						<XFilterParam name="fieldname" value="amtype"/>
						<XFilterParam name="fieldvalue" value="0x0D"/>
					</XCond>
				</XCondOr>

				<XCondOr>
					<XCond name="IsEqual">
						<XFilterParam name="fieldname" value="packet_id"/>
						<XFilterParam name="fieldvalue" value="4"/>
					</XCond>
					<XCond name="IsEqual">
						<XFilterParam name="fieldname" value="packet_id"/>
						<XFilterParam name="fieldvalue" value="5"/>
					</XCond>
					<XCond name="IsEqual">
						<XFilterParam name="fieldname" value="packet_id"/>
						<XFilterParam name="fieldvalue" value="6"/>
					</XCond>															
				</XCondOr>
				
				<XCond name="IsEqual">
					<XFilterParam name="fieldname" value="board_id"/>
					<XFilterParam name="fieldvalue" value="0x88"/>
				</XCond>				
			</XCondAnd>
		</XFilter>
		<XDataSinks>
			<XDataSink name="Generic Print Datasink">
				<XDSParam name="printstring" value="XTutorial [sensor data converted to engineering units]:\n   lesson      := %s\n   health:     node id=%s,\n   battery     := %s mv \n   temperature := %s degC\n   light       := %s ADC counts\n   mic         := %s ADC counts\n   AccelX      := %s milliG\n   AccelY      := %s milliG\n   MagX        := %s mgauss\n   MagY        := %s mgauss "/>
				<XDSParam name="printfields" value="packet_id,nodeid,voltage,temp,light,mic,accel_x,accel_y,mag_x,mag_y"/>
			</XDataSink>
			<XDataSink name="Generic Alert Datasink">
				<XDSParam name="voltage" value="[2500,3500]"/>
				<XDSParam name="temp" value="[-5,45]"/>
				<XDSParam name="light" value="[0,3000]"/>
				<XDSParam name="mic" value="[0,1000]"/>
				<XDSParam name="accel_x" value="[-2000,2000]"/>
				<XDSParam name="accel_y" value="[-2000,2000]"/>
				<XDSParam name="mag_x" value="[0,100]"/>
				<XDSParam name="mag_y" value="[0,100]"/>
			</XDataSink>
			<XDataSink name="Open Log Datasink">
				<XDSParam name="tablename_1" value="tutorial_results"/>				
				<XDSParam name="createsql_1" value="CREATE TABLE tutorial_results ( result_time timestamp without time zone, epoch integer, nodeid integer, parent integer, voltage integer, temp integer, light integer, accel_x integer, accel_y integer, mag_x integer, mag_y integer, mic integer )"/>	
				<XDSParam name="tablename_2" value="tutorial_results_l"/>				
				<XDSParam name="createsql_2" value="CREATE TABLE tutorial_results_l ( result_time timestamp without time zone, epoch integer, nodeid integer, parent integer, voltage integer, temp integer, light integer, accel_x integer, accel_y integer, mag_x integer, mag_y integer, mic integer )"/>	
				<XDSParam name="rulesql_2" value="CREATE RULE cache_tutorial_results AS ON INSERT TO tutorial_results DO ( DELETE FROM tutorial_results_l WHERE nodeid = NEW.nodeid;INSERT INTO tutorial_results_l VALUES (NEW.*); )"/>				
				<XDSParam name="insertsql_2" value="INSERT into tutorial_results (result_time,nodeid,voltage,temp,light,accel_x,accel_y,mag_x,mag_y,mic) values (now(),%i,%i,%i,%i,%i,%i,%i,%i,%i)"/>
				<XDSParam name="insertfields_2" value="nodeid,voltage,temp,light,accel_x,accel_y,mag_x,mag_y,mic"/>
			</XDataSink>
		</XDataSinks>
	</XFieldExtractor>


	<XFieldExtractor name="XTUTORIAL TYPE 2 Config XML" order="2">
		<XFields>
			<XField name="amtype" byteoffset="2" length="1" type="uint8"/>
			<XField name="nodeid" byteoffset="7" length="2" type="uint16" specialtype="nodeid"/>
			<!--
			<XField name="parent" byteoffset="14" length="2" type="uint16" specialtype="parentid"/>
			/-->
			<XField name="group" byteoffset="3" length="1" type="uint8"/>
			<XField name="board_id" byteoffset="5" length="1" type="uint8"/>
			<XField name="packet_id" byteoffset="6" length="1" type="uint8"/>
			<XField name="reading_1" byteoffset="9" length="2" type="uint16"/>
			<XField name="reading_2" byteoffset="11" length="2" type="uint16"/>
			<XField name="reading_3" byteoffset="13" length="2" type="uint16"/>
			<XField name="reading_4" byteoffset="15" length="2" type="uint16"/>
			<XField name="reading_5" byteoffset="17" length="2" type="uint16"/>
			<XField name="reading_6" byteoffset="19" length="2" type="uint16"/>
			<XField name="reading_7" byteoffset="21" length="2" type="uint16"/>
			<XField name="reading_8" byteoffset="23" length="2" type="uint16"/>
		</XFields>
		<XFilter>
			<XCondAnd>
			
				<!--
					Check if this is a sensor type packet...AMTYPE_XUART or AMTYPE_XSENSOR
					The Byte offsets defined above assume that there is no multihop header
				/-->
				<XCondOr>
					<XCond name="IsEqual">
						<XFilterParam name="fieldname" value="amtype"/>
						<XFilterParam name="fieldvalue" value="0x00"/>
					</XCond>

					<XCond name="IsEqual">
						<XFilterParam name="fieldname" value="amtype"/>
						<XFilterParam name="fieldvalue" value="0x32"/>
					</XCond>
				</XCondOr>

				<XCondOr>
					<XCond name="IsEqual">
						<XFilterParam name="fieldname" value="packet_id"/>
						<XFilterParam name="fieldvalue" value="7"/>
					</XCond>													
				</XCondOr>
				
				<XCond name="IsEqual">
					<XFilterParam name="fieldname" value="board_id"/>
					<XFilterParam name="fieldvalue" value="0x88"/>
				</XCond>				
			</XCondAnd>
		</XFilter>
		<XDataSinks>
			<XDataSink name="Generic Print Datasink">
				<XDSParam name="printstring" value="XTutorial [sensor data converted to engineering units]:\n   lesson      := %s\n   health:     node id=%s \n   reading_1     := %s\n   reading_2     := %s\n   reading_3     := %s\n   reading_4     := %s\n   reading_5     := %s\n   reading_6     := %s\n   reading_7     := %s\n   reading_8     := %s"/>
				<XDSParam name="printfields" value="packet_id,nodeid,reading_1,reading_2,reading_3,reading_4,reading_5,reading_6,reading_7,reading_8"/>
			</XDataSink>
			<XDataSink name="Generic Alert Datasink">
				<XDSParam name="reading_1" value="[2500,3500]"/>
				<XDSParam name="reading_2" value="[-5,45]"/>
				<XDSParam name="reading_3" value="[0,3000]"/>
				<XDSParam name="reading_4" value="[0,1000]"/>
				<XDSParam name="reading_5" value="[-2000,2000]"/>
				<XDSParam name="reading_6" value="[-2000,2000]"/>
				<XDSParam name="reading_7" value="[0,100]"/>
				<XDSParam name="reading_8" value="[0,100]"/>
			</XDataSink>
			<XDataSink name="Open Log Datasink">
				<XDSParam name="tablename_1" value="tutorial_results"/>				
				<XDSParam name="createsql_1" value="CREATE TABLE tutorial_results ( result_time timestamp without time zone, epoch integer, nodeid integer, parent integer, reading_1 integer, reading_2 integer, reading_3 integer, reading_5 integer, reading_6 integer, reading_7 integer, reading_8 integer, reading_4 integer )"/>	
				<XDSParam name="tablename_2" value="tutorial_results_l"/>				
				<XDSParam name="createsql_2" value="CREATE TABLE tutorial_results_l ( result_time timestamp without time zone, epoch integer, nodeid integer, parent integer, reading_1 integer, reading_2 integer, reading_3 integer, reading_5 integer, reading_6 integer, reading_7 integer, reading_8 integer, reading_4 integer )"/>	
				<XDSParam name="rulesql_2" value="CREATE RULE cache_tutorial_results AS ON INSERT TO tutorial_results DO ( DELETE FROM tutorial_results_l WHERE nodeid = NEW.nodeid;INSERT INTO tutorial_results_l VALUES (NEW.*); )"/>				
				<XDSParam name="insertsql_2" value="INSERT into tutorial_results (result_time,nodeid,reading_1,reading_2,reading_3,reading_5,reading_6,reading_7,reading_8,reading_4) values (now(),%i,%i,%i,%i,%i,%i,%i,%i,%i)"/>
				<XDSParam name="insertfields_2" value="nodeid,reading_1,reading_2,reading_3,reading_5,reading_6,reading_7,reading_8,reading_4"/>
			</XDataSink>
		</XDataSinks>
	</XFieldExtractor>
</XServeConfig>